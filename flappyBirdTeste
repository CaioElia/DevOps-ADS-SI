<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flappy Bird - Canos Visíveis</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #87CEEB;
            font-family: Arial, sans-serif;
        }
        canvas {
            border: 2px solid #000;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="400" height="600"></canvas>

    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        const bird = {
            x: 50,
            y: 300,
            velocity: 0,
            width: 40,
            height: 30,
            gravity: 0.5,
            jump: -10
        };

        const pipes = [];

        const pipeWidth = 50;
        const pipeGap = 150;
        const pipeInterval = 1500;

        let score = 0;
        let gameOver = false;

        function drawBird() {
            ctx.fillStyle = 'yellow';
            ctx.fillRect(bird.x, bird.y, bird.width, bird.height);
        }

        // Função modificada para criar canos totalmente visíveis
        function createPipe() {
            const minTopHeight = 50; // Altura mínima para o cano superior
            const maxTopHeight = canvas.height - pipeGap - 50; // Altura máxima para o cano superior
            const topHeight = Math.random() * (maxTopHeight - minTopHeight) + minTopHeight;
            
            pipes.push({
                x: canvas.width,
                top: topHeight,
                bottom: topHeight + pipeGap
            });
        }

        function drawPipes() {
            ctx.fillStyle = 'green';
            pipes.forEach(pipe => {
                // Desenha o cano superior
                ctx.fillRect(pipe.x, 0, pipeWidth, pipe.top);
                // Desenha o cano inferior
                ctx.fillRect(pipe.x, pipe.bottom, pipeWidth, canvas.height - pipe.bottom);
            });
        }

        function drawScore() {
            ctx.fillStyle = 'black';
            ctx.font = '24px Arial';
            ctx.fillText(`Pontuação: ${score}`, 10, 30);
        }

        function update() {
            if (gameOver) return;

            bird.velocity += bird.gravity;
            bird.y += bird.velocity;

            if (bird.y + bird.height > canvas.height || bird.y < 0) {
                gameOver = true;
            }

            pipes.forEach((pipe, index) => {
                pipe.x -= 2;

                if (bird.x < pipe.x + pipeWidth &&
                    bird.x + bird.width > pipe.x &&
                    (bird.y < pipe.top || bird.y + bird.height > pipe.bottom)) {
                    gameOver = true;
                }

                if (pipe.x + pipeWidth < bird.x && !pipe.scored) {
                    score++;
                    pipe.scored = true;
                }

                if (pipe.x + pipeWidth < 0) {
                    pipes.splice(index, 1);
                }
            });
        }

        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            ctx.fillStyle = '#87CEEB';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            drawPipes();
            drawBird();
            drawScore();

            if (gameOver) {
                ctx.fillStyle = 'black';
                ctx.font = '48px Arial';
                ctx.fillText('Game Over', canvas.width / 2 - 100, canvas.height / 2);
            }
        }

        function gameLoop() {
            update();
            draw();
            requestAnimationFrame(gameLoop);
        }

        gameLoop();
        setInterval(createPipe, pipeInterval);

        canvas.addEventListener('click', () => {
            if (gameOver) {
                bird.y = 300;
                bird.velocity = 0;
                pipes.length = 0;
                score = 0;
                gameOver = false;
            } else {
                bird.velocity = bird.jump;
            }
        });
    </script>
</body>
</html>